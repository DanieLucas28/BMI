<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureCookies.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>